apply plugin: 'com.android.library'
//apply from: rootProject.file('gradle/WeChatPublish.gradle')

//artifactId = 'wcdb-android'

int ndkVersion() {
    if (android.ndkDirectory != null) {
        def propFile = new File(android.ndkDirectory, 'source.properties')
        if (propFile.exists()) {
            def props = new Properties()
            props.load(propFile.newInputStream())
            def numericVersion = (props['Pkg.Revision'] =~ /^[0-9]+/)[0]
            return numericVersion as int
        }
    }
    return 0
}

android {
    def ndkVer = ndkVersion()
    def useGcc = rootProject.hasProperty('USE_GCC') &&
            rootProject.USE_GCC == '1' &&
            ndkVer < 16     // In NDK >= r16, universal header breaks mmap with _FILE_OFFSET_BITS=64

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName version

        externalNativeBuild {
            ndkBuild {
                arguments '-j4'
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                if (useGcc) {
                    abiFilters 'armeabi'
                    arguments 'USE_GCC=1'   // clang generates wrong code when targeting armeabi
                }

                def hasBuildInfo = false
                if (rootProject.hasProperty("WX_BUILD_REVISION"))
                    hasBuildInfo = arguments.add("WX_BUILD_REVISION='${rootProject.WX_BUILD_REVISION}'")
                if (rootProject.hasProperty("WX_BUILD_BRANCH"))
                    hasBuildInfo = arguments.add("WX_BUILD_BRANCH='${rootProject.WX_BUILD_BRANCH}'")
                if (rootProject.hasProperty("WX_BUILD_TIME"))
                    hasBuildInfo = arguments.add("WX_BUILD_TIME='${rootProject.WX_BUILD_TIME}'")
                if (rootProject.hasProperty("WX_BUILD_JOB"))
                    hasBuildInfo = arguments.add("WX_BUILD_JOB='${rootProject.WX_BUILD_JOB}'")
                if (hasBuildInfo) {
                    arguments "WX_BUILD_VERSION='$version'"
                    arguments 'WITH_BUILD_INFO=1'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }

        debug {
            consumerProguardFiles 'proguard-rules.pro'
            jniDebuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            jni.srcDirs = ['../jni']
            jniLibs.srcDirs = []
        }
    }

    externalNativeBuild {
        ndkBuild {
            path rootProject.file('Android.mk')
        }
    }

    lintOptions {
        disable 'OldTargetApi', 'GradleDependency'
    }
}

//wechatPublish {
//    publishAllVariants true
//
//    publishToBintray {
//        repo = 'wcdb'
//        name = 'wcdb-android'
//        desc = ''
//        websiteUrl = 'https://github.com/Tencent/wcdb'
//        issueTrackerUrl = 'https://github.com/Tencent/wcdb/issues'
//        vcsUrl = 'https://github.com/Tencent/wcdb.git'
//        licenses = ['BSD 3-Clause']
//    }
//}
